{
  "name": "betonquest",
  "publisher": "EverMC",
  "displayName": "BetonQuest",
  "description": "A GUI for BetonQuest scripting",
  "version": "0.4.1",
  "icon": "assets/icon-256.png",
  "engines": {
    "vscode": "^1.80.0"
  },
  "license": "AGPL-3.0",
  "categories": [
    "Other"
  ],
  "bugs": {
    "url": "https://github.com/EverMCServer/vscode-BetonQuest/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/EverMCServer/vscode-BetonQuest.git"
  },
  "extensionPack": [
    "redhat.vscode-yaml"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./extension/dist/extension.js",
  "browser": "./extension/dist/web/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "betonquest.openConversationEditor",
        "title": "%extension.command.openConversationEditor.title%",
        "icon": {
          "light": "assets/icon-conversations-edit-light.svg",
          "dark": "assets/icon-conversations-edit-dark.svg"
        }
      },
      {
        "command": "betonquest.openEventsEditor",
        "title": "%extension.command.openEventsEditor.title%",
        "icon": {
          "light": "assets/icon-events-edit-light.svg",
          "dark": "assets/icon-events-edit-dark.svg"
        }
      },
      {
        "command": "betonquest.openConditionsEditor",
        "title": "%extension.command.openConditionsEditor.title%",
        "icon": {
          "light": "assets/icon-conditions-edit-light.svg",
          "dark": "assets/icon-conditions-edit-dark.svg"
        }
      },
      {
        "command": "betonquest.openObjectivesEditor",
        "title": "%extension.command.openObjectivesEditor.title%",
        "icon": {
          "light": "assets/icon-objectives-edit-light.svg",
          "dark": "assets/icon-objectives-edit-dark.svg"
        }
      },
      {
        "command": "betonquest.openPackageEditor",
        "title": "%extension.command.openPackageEditor.title%",
        "icon": {
          "light": "assets/icon-conversations-edit-light.svg",
          "dark": "assets/icon-conversations-edit-dark.svg"
        }
      }
    ],
    "menus": {
      "editor/title": [
        {
          "when": "resourceLangId == yaml && !activeCustomEditorId && resourcePath =~ /conversations[\\/\\\\].+\\.yml$/i && canActivateConversationEditor",
          "command": "betonquest.openConversationEditor",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == yaml && !activeCustomEditorId && resourcePath =~ /events\\.yml$/i && canActivateEventsEditor",
          "command": "betonquest.openEventsEditor",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == yaml && !activeCustomEditorId && resourcePath =~ /conditions\\.yml$/i && canActivateConditionsEditor",
          "command": "betonquest.openConditionsEditor",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == yaml && !activeCustomEditorId && resourcePath =~ /objectives\\.yml$/i && canActivateObjectivesEditor",
          "command": "betonquest.openObjectivesEditor",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == yaml && !activeCustomEditorId && canActivatePackageEditor",
          "command": "betonquest.openPackageEditor",
          "group": "navigation"
        }
      ]
    },
    "customEditors": [
      {
        "viewType": "betonquest.conversationEditor",
        "displayName": "%extension.customEditors.conversationEditor.displayName%",
        "priority": "option",
        "selector": [
          {
            "filenamePattern": "**/conversations/*.yml"
          },
          {
            "filenamePattern": "**/conversations/*.yaml"
          }
        ]
      },
      {
        "viewType": "betonquest.eventsEditor",
        "displayName": "%extension.customEditors.eventsEditor.displayName%",
        "priority": "option",
        "selector": [
          {
            "filenamePattern": "**/events.yml"
          },
          {
            "filenamePattern": "**/events.yaml"
          }
        ]
      },
      {
        "viewType": "betonquest.conditionsEditor",
        "displayName": "%extension.customEditors.conditionsEditor.displayName%",
        "priority": "option",
        "selector": [
          {
            "filenamePattern": "**/conditions.yml"
          },
          {
            "filenamePattern": "**/conditions.yaml"
          }
        ]
      },
      {
        "viewType": "betonquest.objectivesEditor",
        "displayName": "%extension.customEditors.objectivesEditor.displayName%",
        "priority": "option",
        "selector": [
          {
            "filenamePattern": "**/objectives.yml"
          },
          {
            "filenamePattern": "**/objectives.yaml"
          }
        ]
      },
      {
        "viewType": "betonquest.packageEditor",
        "displayName": "%extension.customEditors.packageEditor.displayName%",
        "priority": "option",
        "selector": [
          {
            "filenamePattern": "**/*.yml"
          },
          {
            "filenamePattern": "**/*.yaml"
          }
        ]
      }
    ],
    "configuration": {
      "title": "BetonQuest",
      "properties": {
        "betonquest.setting.translationSelection": {
          "type": "string",
          "default": "en",
          "description": "%extension.setting.translationSelection.description%"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "npm-run-all i generate-list compile:all webpack:compile",
    "watch": "npm-run-all i generate-list -p watch:all webpack:watch",
    "postinstall": "npm-run-all install:*",
    "i": "npm prune && npm install",
    "install:extension": "cd extension/ && npm install && npm prune",
    "install:server": "cd server/ && npm install && npm prune",
    "install:webview": "cd webview/ && npm install && npm prune",
    "install:utils": "cd utils/ && npm install && npm prune",
    "generate-list": "ts-node scripts/generateData.ts",
    "compile:all": "tsc -b ./extension/ ./webview/ ./server/",
    "webpack:compile": "webpack --config webpack.prod.js",
    "watch:all": "tsc -b -watch ./extension/ ./webview/ ./server/",
    "webpack:watch": "webpack --watch --config webpack.dev.js",
    "open-in-browser": "vscode-test-web --browserOption=--remote-debugging-port=9221 --extensionDevelopmentPath=."
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.6",
    "@types/node": "20.11.19",
    "@types/vscode": "^1.80.0",
    "@types/webpack-env": "^1.18.4",
    "@typescript-eslint/eslint-plugin": "^7.0.2",
    "@typescript-eslint/parser": "^7.0.2",
    "@vscode/test-electron": "^2.3.9",
    "@vscode/test-web": "^0.0.52",
    "assert": "^2.1.0",
    "copy-webpack-plugin": "^12.0.2",
    "css-loader": "^6.10.0",
    "css-modules-typescript-loader": "^4.0.1",
    "eslint": "^8.56.0",
    "glob": "^10.3.10",
    "mocha": "^10.3.0",
    "npm-run-all": "^4.1.5",
    "path-browserify": "^1.0.1",
    "process": "^0.11.10",
    "style-loader": "^3.3.4",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths-webpack-plugin": "^4.1.0",
    "typescript": "^5.3.3",
    "webpack": "^5.90.3",
    "webpack-cli": "^5.1.4",
    "webpack-merge": "^5.10.0"
  }
}
